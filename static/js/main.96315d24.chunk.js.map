{"version":3,"sources":["logo.svg","components/Toggel/Toggle.js","App.js","reportWebVitals.js","index.js"],"names":["Toggle","props","setToggleOnOff","state","tglStart","interval","setInterval","countDown","setState","tglVariant","clearInterval","timeLft","this","Container","Row","className","Col","as","Button","xs","sm","md","lg","onClick","Component","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAAe,G,MAAA,IAA0B,kC,4ECyF1BA,EArFf,kDACE,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAkBRC,eAAiB,WAEE,UADE,EAAKC,MAAlBC,UAEJ,EAAKC,SAAWC,YAAY,EAAKC,UAAW,KAC5C,EAAKC,SAAS,CACZJ,SAAU,OACVK,WAAY,iBAGd,EAAKD,SAAS,CACZJ,SAAU,QACVK,WAAY,gBAGdC,cAAc,EAAKL,YAjCJ,EAqCnBE,UAAY,WAEiB,IAAvB,EAAKJ,MAAMQ,SACb,EAAKH,SAAS,CACZJ,SAAU,QACVK,WAAY,cACZE,QAAS,KAEXD,cAAc,EAAKL,WAGnB,EAAKG,SAAS,CACZG,QAAS,EAAKR,MAAMQ,QAAU,KA9ClC,EAAKR,MAAQ,CACXC,SAAU,QACVK,WAAY,cACZE,QAAS,GANM,EADrB,qDAuDY,IACFP,EAAaQ,KAAKT,MAAlBC,SACAK,EAAeG,KAAKT,MAApBM,WACAE,EAAYC,KAAKT,MAAjBQ,QACN,OACE,eAACE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,UAAU,yBAAf,SACE,cAACC,EAAA,EAAD,CAAKC,GAAIC,IAAQH,UAAWN,EAAYU,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAC/DC,QAASX,KAAKV,eADhB,SAEE,+BACGE,EACD,uBACCK,SAIP,uBACA,cAACK,EAAA,EAAD,CAAKC,UAAU,yBAAf,SACE,cAACC,EAAA,EAAD,CAAKC,GAAIC,IAAQH,UAAWN,EAAYU,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAC/DC,QAASX,KAAKV,eADhB,SAEE,6BACGS,eA5Ef,GAA4Ba,aCoBbC,MAnBf,WACE,OACE,qBAAKV,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAAC,EAAD,IACA,qBAAKW,IAAKC,EAAMZ,UAAU,WAAWa,IAAI,eCElCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.96315d24.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Container, Row, Col } from 'react-bootstrap';\n\nexport class Toggle extends Component {\n  constructor(props) {\n    super(props);\n    // Initial State\n    this.state = {\n      tglStart: \"Start\",\n      tglVariant: 'btn-success',\n      timeLft: 3,\n    };\n    // This binding is necessary to make `this` work in the callback\n    // this.setToggleOnOff = this.setToggleOnOff.bind(this);\n    // or not necessary if using an arrow function..\n  }\n\n  static propTypes = {\n    tglStart: PropTypes.string.isRequired,\n    tglVariant: PropTypes.string.isRequired,\n    timeLft: PropTypes.number.isRequired,\n  };\n\n  setToggleOnOff = () => {\n    let { tglStart } = this.state;\n    if (tglStart === \"Start\") {\n      this.interval = setInterval(this.countDown, 1000);\n      this.setState({\n        tglStart: \"Stop\",\n        tglVariant: 'btn-danger',\n      });\n    } else {\n      this.setState({\n        tglStart: \"Start\",\n        tglVariant: 'btn-success',\n      });\n      // Clearing the interval\n      clearInterval(this.interval);\n    }\n  };\n\n  countDown = () => {\n    // If the time reach 0 then we display Buzzzz! alert.\n    if (this.state.timeLft === 0) {\n      this.setState({\n        tglStart: \"Start\",\n        tglVariant: 'btn-success',\n        timeLft: 10\n      });\n      clearInterval(this.interval);\n    } else {\n      // We decrease the time second by second\n      this.setState({\n        timeLft: this.state.timeLft - 1\n      });\n    }\n  };\n\n  render() {\n    let { tglStart } = this.state;\n    let { tglVariant } = this.state;\n    let { timeLft } = this.state;\n    return (\n      <Container>\n        <Row className=\"justify-content-center\">\n          <Col as={Button} className={tglVariant} xs={4} sm={4} md={3} lg={2}\n            onClick={this.setToggleOnOff}>\n            <h4>\n              {tglStart}\n              <br></br>\n              {tglVariant}\n            </h4>\n          </Col>\n        </Row>\n        <br></br>\n        <Row className=\"justify-content-center\">\n          <Col as={Button} className={tglVariant} xs={4} sm={4} md={3} lg={2}\n            onClick={this.setToggleOnOff}>\n            <h4>\n              {timeLft}\n            </h4>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Toggle;\n","import logo from './logo.svg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Toggle from \"./components/Toggel/Toggle\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Toggle></Toggle>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        {/* <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a> */}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}